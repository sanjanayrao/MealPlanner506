{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\sanja\\\\code\\\\506\\\\MealPlanner506\\\\MealPlanner\\\\components\\\\Deck.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Card, ListItem, Icon, Text } from 'react-native-elements';\nimport Button from \"./Button\";\nvar testMeals = [{\n  \"name\": \"poo\",\n  \"ingredients\": [{\n    'name': 'garlic',\n    'amount': '4',\n    'unit': 'cloves'\n  }, {\n    'name': 'garpotatolic',\n    'amount': '4',\n    'unit': 'pounds'\n  }],\n  \"steps\": \"hfrihferigherigrjtijrt\",\n  \"servings\": 5,\n  \"key\": 13\n}, {\n  \"name\": \"yummyneww\",\n  \"ingredients\": [{\n    'name': 'water',\n    'amount': '12',\n    'unit': 'gallons'\n  }, {\n    'name': 'tomato',\n    'amount': '4',\n    'unit': 'pounds'\n  }],\n  \"steps\": \"stir it a lot\",\n  \"servings\": 5,\n  \"key\": 12\n}, {\n  \"name\": \"brandt\",\n  \"ingredients\": [{\n    'name': 'salt',\n    'amount': '4',\n    'unit': 'tons'\n  }, {\n    'name': 'evil',\n    'amount': '32',\n    'unit': 'centimeters'\n  }],\n  \"steps\": \"boil until he ded\",\n  \"servings\": 5,\n  \"key\": 1\n}, {\n  \"name\": \"not food\",\n  \"ingredients\": [{\n    'name': 'garlic',\n    'amount': '4',\n    'unit': 'cloves'\n  }, {\n    'name': 'mustard',\n    'amount': '4',\n    'unit': 'cups'\n  }],\n  \"steps\": \"bake it\",\n  \"servings\": 5,\n  \"key\": 18\n}];\n\nvar Meals = function (_React$Component) {\n  _inherits(Meals, _React$Component);\n\n  var _super = _createSuper(Meals);\n\n  function Meals() {\n    var _this;\n\n    _classCallCheck(this, Meals);\n\n    _this = _super.call(this);\n    _this.state = {\n      meals: testMeals\n    };\n    return _this;\n  }\n\n  _createClass(Meals, [{\n    key: \"getMealCards\",\n    value: function getMealCards() {\n      var _this2 = this;\n\n      var cards = [];\n\n      var _loop = function _loop(i) {\n        cards.push(React.createElement(Card, {\n          key: i,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }\n        }, React.createElement(Card.Title, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }\n        }, _this2.state.meals[i].name), React.createElement(Text, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        }, \"Serves: \", _this2.state.meals[i].servings), React.createElement(Button, {\n          text: 'View Meal',\n          textStyle: {\n            color: 'white'\n          },\n          buttonStyle: styles.mealButton,\n          onPress: function onPress() {\n            return _this2.props.navigation.navigate('Meal View', {\n              'meal': _this2.state.meals[i]\n            });\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        })));\n      };\n\n      for (var i in this.state.meals) {\n        _loop(i);\n      }\n\n      return cards;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ScrollView, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 12\n        }\n      }, React.createElement(Text, {\n        style: styles.header,\n        h2: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }, \"Meals on Deck\"), this.getMealCards());\n    }\n  }]);\n\n  return Meals;\n}(React.Component);\n\nexport { Meals as default };\nvar styles = StyleSheet.create({\n  mealButton: {\n    backgroundColor: '#9FC9AE',\n    padding: 10,\n    borderRadius: 10,\n    height: 60,\n    width: \"75%\",\n    alignSelf: 'center',\n    alignItems: 'center',\n    margin: 10,\n    justifyContent: 'center',\n    alignContent: 'center'\n  },\n  list: {\n    width: '100%'\n  },\n  header: {\n    margin: 15\n  }\n});","map":{"version":3,"sources":["C:/Users/sanja/code/506/MealPlanner506/MealPlanner/components/Deck.js"],"names":["React","Card","ListItem","Icon","Text","Button","testMeals","Meals","state","meals","cards","i","push","name","servings","color","styles","mealButton","props","navigation","navigate","header","getMealCards","Component","StyleSheet","create","backgroundColor","padding","borderRadius","height","width","alignSelf","alignItems","margin","justifyContent","alignContent","list"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, TouchableWithoutFeedback, Dimensions, TextInput, StyleSheet, ScrollView, FlatList} from 'react-native';\r\nimport { Card, ListItem, Icon, Text } from 'react-native-elements';\r\nimport Button from './Button';\r\n\r\n\r\nconst testMeals = [\r\n    {\r\n        \"name\": \"poo\",\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'garlic',\r\n                'amount' : '4',\r\n                'unit' : 'cloves'\r\n            },\r\n            {\r\n                'name': 'garpotatolic',\r\n                'amount' : '4',\r\n                'unit' : 'pounds'\r\n            },\r\n            \r\n\r\n        ],\r\n        \"steps\" : \"hfrihferigherigrjtijrt\",\r\n        \"servings\" : 5,\r\n        \"key\" : 13\r\n\r\n\r\n    },{\r\n        \"name\": \"yummyneww\",\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'water',\r\n                'amount' : '12',\r\n                'unit' : 'gallons'\r\n            },\r\n            {\r\n                'name': 'tomato',\r\n                'amount' : '4',\r\n                'unit' : 'pounds'\r\n            },\r\n            \r\n\r\n        ],\r\n        \"steps\" : \"stir it a lot\",\r\n        \"servings\" : 5,\r\n        \"key\" : 12\r\n\r\n\r\n    },{\r\n        \"name\": \"brandt\",\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'salt',\r\n                'amount' : '4',\r\n                'unit' : 'tons'\r\n            },\r\n            {\r\n                'name': 'evil',\r\n                'amount' : '32',\r\n                'unit' : 'centimeters'\r\n            },\r\n            \r\n\r\n        ],\r\n        \"steps\" : \"boil until he ded\",\r\n        \"servings\" : 5,\r\n        \"key\" : 1   \r\n\r\n\r\n    },{\r\n        \"name\": \"not food\",\r\n        \"ingredients\": [\r\n            {\r\n                'name': 'garlic',\r\n                'amount' : '4',\r\n                'unit' : 'cloves'\r\n            },\r\n            {\r\n                'name': 'mustard',\r\n                'amount' : '4',\r\n                'unit' : 'cups'\r\n            },\r\n            \r\n\r\n        ],\r\n        \"steps\" : \"bake it\",\r\n        \"servings\" : 5,\r\n        \"key\" : 18\r\n\r\n    }\r\n]\r\n\r\nexport default class Meals extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            meals: testMeals\r\n        }\r\n    }\r\n\r\n    getMealCards(){\r\n        let cards = [];\r\n\r\n        for(const i in this.state.meals){\r\n            cards.push(\r\n            <Card key={i}>\r\n                <Card.Title>\r\n                    {this.state.meals[i].name}\r\n                </Card.Title>\r\n                <Text>\r\n                    Serves: {this.state.meals[i].servings}\r\n                </Text>\r\n                <Button\r\n                    text={'View Meal'}\r\n                    textStyle={{color: 'white'}}\r\n                    buttonStyle={styles.mealButton}\r\n                    onPress={()=>this.props.navigation.navigate('Meal View', {'meal' : this.state.meals[i] } )}\r\n                    />            \r\n            </Card>)\r\n        }\r\n        return cards;\r\n    }\r\n    \r\n    render(){\r\n        return(\r\n           <ScrollView>\r\n                <Text style={styles.header} h2>Meals on Deck</Text>\r\n                {this.getMealCards()}\r\n                \r\n           </ScrollView>\r\n        )\r\n    }\r\n\r\n}\r\nconst styles = StyleSheet.create({\r\n    mealButton:{\r\n      backgroundColor: '#9FC9AE', \r\n      padding: 10, \r\n      borderRadius: 10,\r\n      height: 60,\r\n      width: \"75%\",\r\n      alignSelf: 'center',\r\n      alignItems: 'center',\r\n      margin:10,\r\n      justifyContent: 'center',\r\n      alignContent: 'center'\r\n  \r\n    },\r\n    list:{\r\n        width: '100%'\r\n\r\n    },\r\n    header:{\r\n        margin: 15\r\n      }\r\n  });"]},"metadata":{},"sourceType":"module"}
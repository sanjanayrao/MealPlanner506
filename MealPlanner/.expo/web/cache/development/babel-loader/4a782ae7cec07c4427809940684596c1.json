{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar firebase = require(\"firebase\");\n\nrequire(\"firebase/firestore\");\n\nvar firebase_config = {\n  apiKey: \"AIzaSyDRCnGnTx85iTkSaI9aMI168sQ81NpcwmA\",\n  authDomain: \"meal-planner-2692d.firebaseapp.com\",\n  databaseURL: \"https://meal-planner-2692d.firebaseio.com\",\n  projectId: \"meal-planner-2692d\",\n  storageBucket: \"meal-planner-2692d.appspot.com\",\n  messagingSenderId: \"327517910029\",\n  appId: \"1:327517910029:web:a062770fb43ea4b428d144\",\n  measurementId: \"G-X1STGXH62T\"\n};\nexport default !firebase.apps.length ? firebase.initializeApp(firebase_config) : firebase.app();\nvar db = firebase.firestore();\nvar __DEBUG__ = false;\nexport function query_users(queries) {\n  var users_ref, users_query;\n  return _regeneratorRuntime.async(function query_users$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (__DEBUG__) {\n            console.debug(\"--BEGIN DEBUGGING--\");\n            console.debug(\"QUERYING USERS COLLECTION\");\n            console.debug(\"QUERY PARAMETERS:\\n\", queries);\n          }\n\n          users_ref = db.collection(\"users\");\n          queries.forEach(function (query) {\n            users_ref = users_ref.where(query[0], query[1], query[2]);\n          });\n          users_query = [];\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(users_ref.get().then(function (query_snapshot) {\n            query_snapshot.forEach(function (doc) {\n              users_query.push({\n                \"id\": doc.id,\n                \"data\": doc.data()\n              });\n            });\n          }).catch(function (error) {\n            console.error(\"Error retrieving document: \", error);\n          }));\n\n        case 6:\n          if (__DEBUG__) {\n            console.debug(\"QUERY DATA:\\n\", users_query);\n            console.debug(\"--END DEBUGGING--\");\n          }\n\n          return _context.abrupt(\"return\", users_query);\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function add_users(doc) {\n  var users_ref, err;\n  return _regeneratorRuntime.async(function add_users$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (__DEBUG__) {\n            console.debug(\"--BEGIN DEBUGGING--\");\n            console.debug(\"WRITING TO USERS COLLECTION\");\n            console.debug(\"WRITE DATA:\\n\", data);\n            console.debug(\"--END DEBUGGING--\");\n          }\n\n          users_ref = db.collection(\"users\");\n          err = false;\n          _context2.next = 5;\n          return _regeneratorRuntime.awrap(users_ref.add(doc.data).then(function () {}).catch(function (error) {\n            console.error(\"Error updating document: \", error);\n            err = true;\n          }));\n\n        case 5:\n          return _context2.abrupt(\"return\", !err);\n\n        case 6:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function update_users(doc) {\n  var users_ref, err;\n  return _regeneratorRuntime.async(function update_users$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (__DEBUG__) {\n            console.debug(\"--BEGIN DEBUGGING--\");\n            console.debug(\"UPDATING USERS COLLECTION\");\n            console.debug(\"UPDATE DATA:\\n\", data);\n            console.debug(\"--END DEBUGGING--\");\n          }\n\n          users_ref = db.collection(\"users\");\n          err = false;\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(users_ref.doc(doc.id).update(doc.data).then(function () {}).catch(function (error) {\n            console.error(\"Error updating document: \", error);\n            err = true;\n          }));\n\n        case 5:\n          return _context3.abrupt(\"return\", !err);\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/sanja/code/506/new/MealPlanner506/MealPlanner/backend/firebase.js"],"names":["firebase","require","firebase_config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","app","db","firestore","__DEBUG__","query_users","queries","console","debug","users_ref","collection","forEach","query","where","users_query","get","then","query_snapshot","doc","push","id","data","catch","error","add_users","err","add","update_users","update"],"mappings":"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","sourcesContent":["const firebase = require(\"firebase\");\r\nrequire(\"firebase/firestore\");\r\n\r\nvar firebase_config = {\r\n    apiKey: \"AIzaSyDRCnGnTx85iTkSaI9aMI168sQ81NpcwmA\",\r\n    authDomain: \"meal-planner-2692d.firebaseapp.com\",\r\n    databaseURL: \"https://meal-planner-2692d.firebaseio.com\",\r\n    projectId: \"meal-planner-2692d\",\r\n    storageBucket: \"meal-planner-2692d.appspot.com\",\r\n    messagingSenderId: \"327517910029\",\r\n    appId: \"1:327517910029:web:a062770fb43ea4b428d144\",\r\n    measurementId: \"G-X1STGXH62T\"\r\n};\r\n\r\nexport default !firebase.apps.length ? firebase.initializeApp(firebase_config) : firebase.app();\r\n\r\nconst db = firebase.firestore();\r\n\r\nconst __DEBUG__ = false;\r\n\r\n/**\r\n * Queries the users collection with the given array of query parameters\r\n * \r\n * @param {array[array]}   queries     An array of query parameters\r\n * \r\n * @return {array[Objects]} Returns an array of each matching document data \r\n */\r\nexport async function query_users(queries) {\r\n    if(__DEBUG__) {\r\n        console.debug(\"--BEGIN DEBUGGING--\");\r\n        console.debug(\"QUERYING USERS COLLECTION\");\r\n        console.debug(\"QUERY PARAMETERS:\\n\", queries);\r\n    }\r\n\r\n    // Filter document reference for each query parameter\r\n    var users_ref = db.collection(\"users\");\r\n    queries.forEach(query => {\r\n        users_ref = users_ref.where(query[0], query[1], query[2]);\r\n    });\r\n\r\n    var users_query = [];\r\n\r\n    // Retrieve filtered data\r\n    await users_ref.get()\r\n    .then(function(query_snapshot) {\r\n        query_snapshot.forEach(function(doc) {\r\n            users_query.push({\"id\": doc.id, \"data\": doc.data()})\r\n        })\r\n    })\r\n    .catch(function(error) {\r\n        console.error(\"Error retrieving document: \", error);\r\n    });\r\n\r\n    if(__DEBUG__) {\r\n        console.debug(\"QUERY DATA:\\n\", users_query);\r\n        console.debug(\"--END DEBUGGING--\");\r\n    }\r\n\r\n    return users_query;\r\n}\r\n\r\n/**\r\n *  Add data in the users collection with the provided data at a new doc\r\n * \r\n * @param {Object}  doc     A firebase document object\r\n * \r\n * @returns Return true on success\r\n */\r\nexport async function add_users(doc) {\r\n    if(__DEBUG__) {\r\n        console.debug(\"--BEGIN DEBUGGING--\");\r\n        console.debug(\"WRITING TO USERS COLLECTION\");\r\n        console.debug(\"WRITE DATA:\\n\", data);\r\n        console.debug(\"--END DEBUGGING--\");\r\n    }\r\n\r\n    var users_ref = db.collection(\"users\");\r\n    var err = false;\r\n\r\n    await users_ref\r\n    .add(doc.data)\r\n    .then(function(){})\r\n    .catch(function(error) {\r\n        console.error(\"Error updating document: \", error);\r\n        err = true;\r\n    });\r\n\r\n    return !err;\r\n}\r\n\r\n/**\r\n *  Updates data in the users collection with the provided data\r\n * \r\n * @param {Object}  doc     A firebase document object\r\n * \r\n * @returns Return true on success\r\n */\r\nexport async function update_users(doc) {\r\n    if(__DEBUG__) {\r\n        console.debug(\"--BEGIN DEBUGGING--\");\r\n        console.debug(\"UPDATING USERS COLLECTION\");\r\n        console.debug(\"UPDATE DATA:\\n\", data);\r\n        console.debug(\"--END DEBUGGING--\");\r\n    }\r\n\r\n    var users_ref = db.collection(\"users\");\r\n    var err = false;\r\n\r\n    await users_ref.doc(doc.id)\r\n    .update(doc.data)\r\n    .then(function(){})\r\n    .catch(function(error) {\r\n        console.error(\"Error updating document: \", error);\r\n        err = true;\r\n    });\r\n\r\n    return !err;\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\sanja\\\\code\\\\506\\\\new\\\\MealPlanner506\\\\MealPlanner\\\\components\\\\Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"./Button\";\nimport base64 from 'base-64';\nimport * as controller from \"../backend/controller\";\n\nvar Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this);\n    _this.state = {\n      username: 'admin',\n      password: 'admin',\n      error: '',\n      token: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"sendRequest\",\n    value: function sendRequest() {\n      var _this2 = this;\n\n      var login_result;\n      return _regeneratorRuntime.async(function sendRequest$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(controller.user_login(this.state.username, this.state.password).then(function (result) {\n                login_result = result;\n              }));\n\n            case 2:\n              if (login_result.success) {\n                this.setState({\n                  username: this.state.username\n                }, function () {\n                  _this2.props.auth(_this2.state.username);\n                });\n              } else {\n                this.setState({\n                  password: ''\n                });\n                this.setState({\n                  error: login_result.err\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.props.show) {\n        var screenWidth = Math.round(Dimensions.get('window').width);\n        var screenHeight = Math.round(Dimensions.get('window').height);\n        return React.createElement(View, {\n          style: {\n            position: 'absolute'\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }\n        }, React.createElement(TouchableWithoutFeedback, {\n          onPress: function onPress() {\n            return _this3.props.hide();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: {\n            width: screenWidth,\n            height: screenHeight,\n            backgroundColor: 'black',\n            opacity: 0.75\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          style: {\n            position: 'absolute',\n            width: this.props.width,\n            height: this.props.height * 0.75,\n            left: (screenWidth - this.props.width) / 2,\n            top: (screenHeight - this.props.height + 100) / 2,\n            backgroundColor: 'white',\n            borderRadius: 10\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: 25,\n            marginLeft: 20,\n            marginTop: 15\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }\n        }, \"Log In\"), React.createElement(Button, {\n          buttonStyle: styles.XButton,\n          textStyle: {\n            fontSize: 25\n          },\n          text: 'âœ•',\n          onPress: function onPress() {\n            return _this3.props.hide();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }\n        }), React.createElement(View, {\n          style: styles.inputFields,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: styles.userField,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }\n        }, React.createElement(TextInput, {\n          style: (styles.textInput, {\n            width: this.props.width / 2\n          }),\n          placeholder: \"Enter a Username\",\n          textAlign: 'center',\n          onChangeText: function onChangeText(username) {\n            return _this3.setState({\n              username: username\n            });\n          },\n          value: this.state.username,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }\n        })), React.createElement(View, {\n          style: styles.passField,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }\n        }, React.createElement(TextInput, {\n          secureTextEntry: true,\n          style: (styles.textInput, {\n            width: this.props.width / 2\n          }),\n          placeholder: \"Enter a Password\",\n          textAlign: 'center',\n          onChangeText: function onChangeText(password) {\n            return _this3.setState({\n              password: password\n            });\n          },\n          value: this.state.password,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }\n        }))), React.createElement(Text, {\n          style: styles.error,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }\n        }, \" \", this.state.error), React.createElement(Button, {\n          textStyle: {\n            color: 'white'\n          },\n          buttonStyle: styles.enterButton,\n          onPress: function onPress() {\n            _this3.sendRequest();\n          },\n          text: 'Log In',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 16\n          }\n        }), React.createElement(Button, {\n          textStyle: {\n            color: 'white'\n          },\n          buttonStyle: styles.signUpButton,\n          onPress: this.props.switch,\n          text: 'No account? Create one now!',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 16\n          }\n        })));\n      }\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar styles = StyleSheet.create({\n  textInput: {\n    height: 40,\n    alignSelf: 'center',\n    justifyContent: 'center'\n  },\n  userField: {\n    margin: 10\n  },\n  passField: {\n    margin: 10\n  },\n  XButton: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: 70,\n    height: 70,\n    position: 'absolute',\n    right: 0\n  },\n  signUpButton: {\n    backgroundColor: '#553555',\n    padding: 10,\n    borderRadius: 10,\n    height: 60,\n    width: 175,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    margin: 10\n  },\n  enterButton: {\n    backgroundColor: '#9FC9AE',\n    padding: 10,\n    borderRadius: 10,\n    height: 60,\n    width: 175,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignSelf: 'center',\n    margin: 10\n  },\n  error: {\n    color: 'red',\n    alignSelf: 'center'\n  },\n  inputFields: {\n    marginTop: 70,\n    alignItems: 'center'\n  }\n});\nexport default Login;","map":{"version":3,"sources":["C:/Users/sanja/code/506/new/MealPlanner506/MealPlanner/components/Login.js"],"names":["React","Button","base64","controller","Login","state","username","password","error","token","user_login","then","result","login_result","success","setState","props","auth","err","show","screenWidth","Math","round","Dimensions","get","width","screenHeight","height","position","hide","backgroundColor","opacity","left","top","borderRadius","fontSize","marginLeft","marginTop","styles","XButton","inputFields","userField","textInput","passField","color","enterButton","sendRequest","signUpButton","switch","Component","StyleSheet","create","alignSelf","justifyContent","margin","alignItems","right","padding"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Text, View, TouchableWithoutFeedback, TextInput, StyleSheet, Dimensions } from 'react-native';\r\nimport Button from './Button';\r\nimport base64 from 'base-64';\r\nimport * as controller from '../backend/controller'\r\n\r\nclass Login extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: 'admin',\r\n      password: 'admin',\r\n      error: '',\r\n      token: ''\r\n    };\r\n  }\r\n\r\n  async sendRequest(){\r\n    var login_result\r\n    await controller.user_login(this.state.username, this.state.password).then(function(result) {\r\n      login_result = result\r\n    })\r\n\r\n    if(login_result.success) {\r\n      this.setState({username: this.state.username}, ()=>{this.props.auth(this.state.username)});\r\n    } else {\r\n      this.setState({password: ''});\r\n      this.setState({error: login_result.err });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(this.props.show) {\r\n      const screenWidth = Math.round(Dimensions.get('window').width);\r\n      const screenHeight = Math.round(Dimensions.get('window').height);\r\n      return (\r\n        <View style={{position: 'absolute'}}>\r\n          <TouchableWithoutFeedback onPress={() => this.props.hide()}>\r\n            <View style={{width: screenWidth, height: screenHeight, backgroundColor: 'black', opacity: 0.75}}>\r\n            </View>\r\n          </TouchableWithoutFeedback>\r\n          <View style={{position: 'absolute', width: this.props.width, height: this.props.height * 0.75, left: (screenWidth - this.props.width)/2, top: (screenHeight - this.props.height + 100)/2, backgroundColor: 'white', borderRadius: 10}}>\r\n            <Text style={{fontSize: 25, marginLeft: 20, marginTop: 15}}>Log In</Text>\r\n            <Button buttonStyle={styles.XButton} textStyle={{fontSize: 25}} text={'âœ•'} onPress={() => this.props.hide()}/>\r\n            <View style={styles.inputFields}>\r\n              <View style={styles.userField} > \r\n                <TextInput style={styles.textInput, {width: (this.props.width/2)}}\r\n                  placeholder=\"Enter a Username\"\r\n                  textAlign={'center'}\r\n                  onChangeText={(username) => this.setState({username})}\r\n                  value={this.state.username}/>\r\n              </View>\r\n              <View style={styles.passField}>\r\n                <TextInput secureTextEntry={true} style={styles.textInput, {width: (this.props.width/2)}}\r\n                  placeholder=\"Enter a Password\"\r\n                  textAlign={'center'}\r\n                  onChangeText={(password) => this.setState({password})}\r\n                  value={this.state.password}/>\r\n              </View>\r\n            </View>\r\n             \r\n               <Text style={styles.error}> {this.state.error}</Text>\r\n               <Button textStyle={{color: 'white'}} buttonStyle={styles.enterButton} onPress={()=>{this.sendRequest()}} text={'Log In'} />\r\n               <Button textStyle={{color: 'white'}} buttonStyle={styles.signUpButton} onPress={this.props.switch} text={'No account? Create one now!'}/>\r\n          </View>\r\n        </View>\r\n      )\r\n    }\r\n    return (<View></View>)\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  textInput:{\r\n    height: 40,\r\n    alignSelf: 'center',\r\n    justifyContent: 'center'\r\n  },\r\n  userField:{\r\n    margin: 10\r\n  },\r\n  passField:{\r\n    margin: 10\r\n  },\r\n  XButton:{\r\n    alignItems: 'center', \r\n    justifyContent: 'center',\r\n    width: 70,\r\n    height: 70, \r\n    position: 'absolute', \r\n    right: 0\r\n  },\r\n  signUpButton:{\r\n    backgroundColor: '#553555', \r\n    padding: 10, \r\n    borderRadius: 10,\r\n    height: 60,\r\n    width: 175,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    margin: 10\r\n\r\n  },\r\n  enterButton:{\r\n    backgroundColor: '#9FC9AE', \r\n    padding: 10, \r\n    borderRadius: 10,\r\n    height: 60,\r\n    width: 175,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    alignSelf: 'center',\r\n    margin: 10\r\n\r\n  },\r\n  error: {\r\n    color: 'red',\r\n    alignSelf: 'center'\r\n  },\r\n  inputFields:{\r\n    marginTop: 70,\r\n    alignItems: 'center',\r\n    }\r\n});\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}
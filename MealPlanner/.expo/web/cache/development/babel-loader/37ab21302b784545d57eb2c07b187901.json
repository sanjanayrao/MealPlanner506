{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\sanja\\\\code\\\\506\\\\MealPlanner506\\\\MealPlanner\\\\components\\\\AddMeal.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Card, ListItem, Icon, Text, Input } from 'react-native-elements';\nimport Button from \"./Button\";\n\nvar AddMeal = function (_React$Component) {\n  _inherits(AddMeal, _React$Component);\n\n  var _super = _createSuper(AddMeal);\n\n  function AddMeal(props) {\n    var _this;\n\n    _classCallCheck(this, AddMeal);\n\n    _this = _super.call(this);\n    _this.state = {\n      name: '',\n      ingredients: '',\n      steps: '',\n      servings: ''\n    };\n    return _this;\n  }\n\n  _createClass(AddMeal, [{\n    key: \"updateDB\",\n    value: function updateDB() {\n      console.log('hi');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, React.createElement(Input, {\n        placeholder: \"Name\",\n        onChangeText: function onChangeText(value) {\n          return _this2.setState({\n            name: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Ingredients: eg '4 cloves of garlic'\",\n        onChangeText: function onChangeText(value) {\n          return _this2.setState({\n            ingredients: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 22\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Steps\",\n        onChangeText: function onChangeText(value) {\n          return _this2.setState({\n            steps: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 22\n        }\n      }), React.createElement(Input, {\n        placeholder: \"Servings\",\n        onChangeText: function onChangeText(value) {\n          return _this2.setState({\n            servings: value\n          });\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 22\n        }\n      }), React.createElement(Button, {\n        text: 'Add Meal',\n        textStyle: {\n          color: 'white'\n        },\n        buttonStyle: styles.edit,\n        onPress: function onPress() {\n          return _this2.updateDB();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 22\n        }\n      })));\n    }\n  }]);\n\n  return AddMeal;\n}(React.Component);\n\nexport { AddMeal as default };\nvar styles = StyleSheet.create({\n  edit: {\n    backgroundColor: '#9FC9AE',\n    padding: 10,\n    borderRadius: 10,\n    marginHorizontal: 5,\n    alignSelf: 'flex-end',\n    alignItems: 'center',\n    position: 'relative'\n  }\n});","map":{"version":3,"sources":["C:/Users/sanja/code/506/MealPlanner506/MealPlanner/components/AddMeal.js"],"names":["React","Card","ListItem","Icon","Text","Input","Button","AddMeal","props","state","name","ingredients","steps","servings","console","log","value","setState","color","styles","edit","updateDB","Component","StyleSheet","create","backgroundColor","padding","borderRadius","marginHorizontal","alignSelf","alignItems","position"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAEA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,KAArC,QAAkD,uBAAlD;AACA,OAAOC,MAAP;;IAEqBC,O;;;;;AACjB,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,WAAW,EAAE,EAFJ;AAGTC,MAAAA,KAAK,EAAE,EAHE;AAITC,MAAAA,QAAQ,EAAE;AAJD,KAAb;AAFc;AAQjB;;;;+BAES;AAENC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH;;;6BACO;AAAA;;AACJ,aACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AACA,QAAA,WAAW,EAAC,MADZ;AAEA,QAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEP,YAAAA,IAAI,EAAEM;AAAR,WAAd,CAAJ;AAAA,SAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKK,oBAAC,KAAD;AACD,QAAA,WAAW,EAAC,sCADX;AAED,QAAA,YAAY,EAAE,sBAAAA,KAAK;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEN,YAAAA,WAAW,EAAEK;AAAf,WAAd,CAAJ;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALL,EASK,oBAAC,KAAD;AACD,QAAA,WAAW,EAAC,OADX;AAED,QAAA,YAAY,EAAE,sBAAAA,KAAK;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEL,YAAAA,KAAK,EAAEI;AAAT,WAAd,CAAJ;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATL,EAaK,oBAAC,KAAD;AACD,QAAA,WAAW,EAAC,UADX;AAED,QAAA,YAAY,EAAE,sBAAAA,KAAK;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEJ,YAAAA,QAAQ,EAAEG;AAAZ,WAAd,CAAJ;AAAA,SAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbL,EAiBK,oBAAC,MAAD;AACG,QAAA,IAAI,EAAE,UADT;AAEG,QAAA,SAAS,EAAE;AAACE,UAAAA,KAAK,EAAE;AAAR,SAFd;AAGG,QAAA,WAAW,EAAEC,MAAM,CAACC,IAHvB;AAIG,QAAA,OAAO,EAAE;AAAA,iBAAI,MAAI,CAACC,QAAL,EAAJ;AAAA,SAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBL,CADJ,CADJ;AA6BH;;;;EA7CgCrB,KAAK,CAACsB,S;;SAAtBf,O;AA+CrB,IAAMY,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC7BJ,EAAAA,IAAI,EAAC;AACDK,IAAAA,eAAe,EAAE,SADhB;AAEDC,IAAAA,OAAO,EAAE,EAFR;AAGDC,IAAAA,YAAY,EAAE,EAHb;AAIDC,IAAAA,gBAAgB,EAAE,CAJjB;AAKDC,IAAAA,SAAS,EAAE,UALV;AAMDC,IAAAA,UAAU,EAAE,QANX;AAODC,IAAAA,QAAQ,EAAE;AAPT;AADwB,CAAlB,CAAf","sourcesContent":["import React from 'react';\r\nimport {  View, TouchableWithoutFeedback, Dimensions, TextInput, StyleSheet, ScrollView} from 'react-native';\r\nimport { Card, ListItem, Icon, Text, Input } from 'react-native-elements';\r\nimport Button from './Button'\r\n\r\nexport default class AddMeal extends React.Component{\r\n    constructor(props){\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            ingredients: '',\r\n            steps: '',\r\n            servings: ''\r\n        }\r\n    }\r\n\r\n    updateDB(){\r\n        // update the database with the added meal here\r\n        console.log('hi')\r\n    }\r\n    render(){\r\n        return(\r\n            <View>\r\n                <Card>\r\n                    <Input\r\n                    placeholder=\"Name\"\r\n                    onChangeText={value => this.setState({ name: value })}\r\n                    />\r\n                     <Input\r\n                    placeholder=\"Ingredients: eg '4 cloves of garlic'\"\r\n                    onChangeText={value => this.setState({ ingredients: value })}\r\n                    />\r\n                     <Input\r\n                    placeholder=\"Steps\"\r\n                    onChangeText={value => this.setState({ steps: value })}\r\n                    />\r\n                     <Input\r\n                    placeholder=\"Servings\"\r\n                    onChangeText={value => this.setState({ servings: value })}\r\n                    />\r\n                     <Button\r\n                        text={'Add Meal'}\r\n                        textStyle={{color: 'white'}}\r\n                        buttonStyle={styles.edit}\r\n                        onPress={()=>this.updateDB() }\r\n                    />\r\n                </Card>\r\n                \r\n            </View>\r\n        )\r\n    }\r\n}\r\nconst styles = StyleSheet.create({\r\n    edit:{\r\n        backgroundColor: '#9FC9AE', \r\n        padding: 10, \r\n        borderRadius: 10,\r\n        marginHorizontal: 5,\r\n        alignSelf: 'flex-end',\r\n        alignItems: 'center',\r\n        position: 'relative'\r\n\r\n    },\r\n})"]},"metadata":{},"sourceType":"module"}